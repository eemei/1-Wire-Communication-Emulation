/*
 * owState_machine.c
 *
 *  Created on: Jul 3, 2017
 *      Author: Jaan Horng
 */
 
#include <stdlib.h>
#include <stdio.h>
#include <stdint.h>
#include "state_machine.h"
#include "event.h"
#include "function.h"
#include "uart.h"

OneWireInfo owInfo = {IDLE_STATE};
uint8_t presencePulse;
uint8_t responsePulse[100] = {0};
char regisNum[64] = {0};
volatile int i, j=0;

int oneWireSM(Event evt){
	switch(owInfo.owState){
	case IDLE_STATE:
		if(evt == START_EVT){
			HAL_HalfDuplex_EnableTxRx();
			timerStart();
			owSend(&presencePulse, sizeof(presencePulse));
			resetPulse();
			owInfo.owState = RESET_STATE;
		}
		break;
	case RESET_STATE:
		if(evt == UART_TX_CPL_EVT){
			owInfo.owState = RESPONSE_STATE;
		}
		else{
			owInfo.owState = IDLE_STATE;
		}
		break;
	case RESPONSE_STATE:
		if(evt == UART_RX_CPL_EVT){
			owInfo.owState = FINISH_INIT_STATE;
		}
		else
			owInfo.owState = IDLE_STATE;
		break;
	case FINISH_INIT_STATE:
		if(evt == TIMEOUT_EVT){
			timerStop();
			owSend(responsePulse, sizeof(responsePulse));
			readROM();
			owInfo.owState = COMMAND_STATE;
		}
    else
      owInfo.owState = IDLE_STATE;
		break;
	case COMMAND_STATE:
		if(evt == UART_TX_CPL_EVT){
			owReadSlot();
			owInfo.owState = READ_SLOT_STATE;
		}
		else
			owInfo.owState = IDLE_STATE;
		break;
	case READ_SLOT_owState:
		for(i=71; i>7; i--){
			if(responsePulse[i] == 0xf8){
				regisNum[j] = '0';
			}
			else if(responsePulse[i] == 0xff){
				regisNum[j] = '1';
			}
			else{
				break;
			}
			j++;
		}
		printf("ID number: %s\n", regisNum);
		break;
	default:
		owInfo.owState = IDLE_owState;
	}
  return 0;
}
