/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_CALLBACK_H
#define _MOCK_CALLBACK_H

#include "callback.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_callback_Init(void);
void mock_callback_Destroy(void);
void mock_callback_Verify(void);




#define HAL_UART_TxCpltCallback_Ignore() HAL_UART_TxCpltCallback_CMockIgnore()
void HAL_UART_TxCpltCallback_CMockIgnore(void);
#define HAL_UART_TxCpltCallback_Expect(huart) HAL_UART_TxCpltCallback_CMockExpect(__LINE__, huart)
void HAL_UART_TxCpltCallback_CMockExpect(UNITY_LINE_TYPE cmock_line, int* huart);
typedef void (* CMOCK_HAL_UART_TxCpltCallback_CALLBACK)(int* huart, int cmock_num_calls);
void HAL_UART_TxCpltCallback_StubWithCallback(CMOCK_HAL_UART_TxCpltCallback_CALLBACK Callback);
#define HAL_UART_RxCpltCallback_Ignore() HAL_UART_RxCpltCallback_CMockIgnore()
void HAL_UART_RxCpltCallback_CMockIgnore(void);
#define HAL_UART_RxCpltCallback_Expect(huart) HAL_UART_RxCpltCallback_CMockExpect(__LINE__, huart)
void HAL_UART_RxCpltCallback_CMockExpect(UNITY_LINE_TYPE cmock_line, int* huart);
typedef void (* CMOCK_HAL_UART_RxCpltCallback_CALLBACK)(int* huart, int cmock_num_calls);
void HAL_UART_RxCpltCallback_StubWithCallback(CMOCK_HAL_UART_RxCpltCallback_CALLBACK Callback);
#define HAL_TIM_PeriodElapsedCallback_Ignore() HAL_TIM_PeriodElapsedCallback_CMockIgnore()
void HAL_TIM_PeriodElapsedCallback_CMockIgnore(void);
#define HAL_TIM_PeriodElapsedCallback_Expect(htim) HAL_TIM_PeriodElapsedCallback_CMockExpect(__LINE__, htim)
void HAL_TIM_PeriodElapsedCallback_CMockExpect(UNITY_LINE_TYPE cmock_line, int* htim);
typedef void (* CMOCK_HAL_TIM_PeriodElapsedCallback_CALLBACK)(int* htim, int cmock_num_calls);
void HAL_TIM_PeriodElapsedCallback_StubWithCallback(CMOCK_HAL_TIM_PeriodElapsedCallback_CALLBACK Callback);

#endif
