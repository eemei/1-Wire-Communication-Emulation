/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_FUNCTIONS_H
#define _MOCK_FUNCTIONS_H

#include "functions.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_functions_Init(void);
void mock_functions_Destroy(void);
void mock_functions_Verify(void);




#define HAL_HalfDuplex_EnableTxRx_IgnoreAndReturn(cmock_retval) HAL_HalfDuplex_EnableTxRx_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void HAL_HalfDuplex_EnableTxRx_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, HAL_StatusTypeDef cmock_to_return);
#define HAL_HalfDuplex_EnableTxRx_ExpectAndReturn(huart, cmock_retval) HAL_HalfDuplex_EnableTxRx_CMockExpectAndReturn(__LINE__, huart, cmock_retval)
void HAL_HalfDuplex_EnableTxRx_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, UART_HandleTypeDef* huart, HAL_StatusTypeDef cmock_to_return);
typedef HAL_StatusTypeDef (* CMOCK_HAL_HalfDuplex_EnableTxRx_CALLBACK)(UART_HandleTypeDef* huart, int cmock_num_calls);
void HAL_HalfDuplex_EnableTxRx_StubWithCallback(CMOCK_HAL_HalfDuplex_EnableTxRx_CALLBACK Callback);
#define timerStart_Ignore() timerStart_CMockIgnore()
void timerStart_CMockIgnore(void);
#define timerStart_Expect(htim) timerStart_CMockExpect(__LINE__, htim)
void timerStart_CMockExpect(UNITY_LINE_TYPE cmock_line, TIM_HandleTypeDef* htim);
typedef void (* CMOCK_timerStart_CALLBACK)(TIM_HandleTypeDef* htim, int cmock_num_calls);
void timerStart_StubWithCallback(CMOCK_timerStart_CALLBACK Callback);
#define HAL_UART_Receive_IT_IgnoreAndReturn(cmock_retval) HAL_UART_Receive_IT_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void HAL_UART_Receive_IT_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, HAL_StatusTypeDef cmock_to_return);
#define HAL_UART_Receive_IT_ExpectAndReturn(huart, pData, Size, cmock_retval) HAL_UART_Receive_IT_CMockExpectAndReturn(__LINE__, huart, pData, Size, cmock_retval)
void HAL_UART_Receive_IT_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, UART_HandleTypeDef* huart, uint8_t* pData, uint16_t Size, HAL_StatusTypeDef cmock_to_return);
typedef HAL_StatusTypeDef (* CMOCK_HAL_UART_Receive_IT_CALLBACK)(UART_HandleTypeDef* huart, uint8_t* pData, uint16_t Size, int cmock_num_calls);
void HAL_UART_Receive_IT_StubWithCallback(CMOCK_HAL_UART_Receive_IT_CALLBACK Callback);
#define resetPulse_Ignore() resetPulse_CMockIgnore()
void resetPulse_CMockIgnore(void);
#define resetPulse_Expect() resetPulse_CMockExpect(__LINE__)
void resetPulse_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_resetPulse_CALLBACK)(int cmock_num_calls);
void resetPulse_StubWithCallback(CMOCK_resetPulse_CALLBACK Callback);
#define presencePulseDetect_Ignore() presencePulseDetect_CMockIgnore()
void presencePulseDetect_CMockIgnore(void);
#define presencePulseDetect_Expect() presencePulseDetect_CMockExpect(__LINE__)
void presencePulseDetect_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_presencePulseDetect_CALLBACK)(int cmock_num_calls);
void presencePulseDetect_StubWithCallback(CMOCK_presencePulseDetect_CALLBACK Callback);
#define searchROM_Ignore() searchROM_CMockIgnore()
void searchROM_CMockIgnore(void);
#define searchROM_Expect() searchROM_CMockExpect(__LINE__)
void searchROM_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_searchROM_CALLBACK)(int cmock_num_calls);
void searchROM_StubWithCallback(CMOCK_searchROM_CALLBACK Callback);
#define readROM_Ignore() readROM_CMockIgnore()
void readROM_CMockIgnore(void);
#define readROM_Expect() readROM_CMockExpect(__LINE__)
void readROM_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_readROM_CALLBACK)(int cmock_num_calls);
void readROM_StubWithCallback(CMOCK_readROM_CALLBACK Callback);
#define skipROM_Ignore() skipROM_CMockIgnore()
void skipROM_CMockIgnore(void);
#define skipROM_Expect() skipROM_CMockExpect(__LINE__)
void skipROM_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_skipROM_CALLBACK)(int cmock_num_calls);
void skipROM_StubWithCallback(CMOCK_skipROM_CALLBACK Callback);
#define readPowerSupply_Ignore() readPowerSupply_CMockIgnore()
void readPowerSupply_CMockIgnore(void);
#define readPowerSupply_Expect() readPowerSupply_CMockExpect(__LINE__)
void readPowerSupply_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_readPowerSupply_CALLBACK)(int cmock_num_calls);
void readPowerSupply_StubWithCallback(CMOCK_readPowerSupply_CALLBACK Callback);
#define HAL_TIM_Base_Start_IT_Ignore() HAL_TIM_Base_Start_IT_CMockIgnore()
void HAL_TIM_Base_Start_IT_CMockIgnore(void);
#define HAL_TIM_Base_Start_IT_Expect() HAL_TIM_Base_Start_IT_CMockExpect(__LINE__)
void HAL_TIM_Base_Start_IT_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_HAL_TIM_Base_Start_IT_CALLBACK)(int cmock_num_calls);
void HAL_TIM_Base_Start_IT_StubWithCallback(CMOCK_HAL_TIM_Base_Start_IT_CALLBACK Callback);

#endif
